{"data":{"site":{"siteMetadata":{"title":"jongp.me","author":"JongGyun Park"}},"markdownRemark":{"id":"399e2c5e-d52e-53c8-b5f4-46d2a7e44462","excerpt":"CSS 개념 정리 태그 - 태그 그 자체 요소 - 태그가 적용된 내용들 css 적용 h2.bluetext - h2태그이면서 class 선택자가 .bluetext인 내용에만 적용 h1, h2 - h1태그에도 적용 h2태그에도 적용. 이런 것들을  그룹선택자 라고 표현 Cascading…","html":"<h1>CSS 개념 정리</h1>\n<p>태그 - 태그 그 자체</p>\n<p>요소 - 태그가 적용된 내용들</p>\n<h2>css 적용</h2>\n<p>h2.bluetext - h2태그이면서 class 선택자가 .bluetext인 내용에만 적용</p>\n<p>h1, h2 - h1태그에도 적용 h2태그에도 적용. 이런 것들을 <strong>그룹선택자</strong>라고 표현</p>\n<h2>Cascading Style Sheets</h2>\n<p><strong>위에서 아래로 흐르는 스타일시트</strong></p>\n<ol>\n<li>\n<p>스타일 우선순위 - 우선순위에 따라 위에서 아래로 적용</p>\n<ul>\n<li>사용자 스타일 시트</li>\n</ul>\n<p> 최우선으로 적용되는 스타일 시트</p>\n<p> 저시력자나 색양작를 위한 스타일 시트, 시스템을 통해 만들어 졌기에 제작자가 컨트롤 불가</p>\n<ul>\n<li>중요 스타일 !important</li>\n</ul>\n<p> 제작자가 만들 스타일에 !important를 붙이는 것. 일반 스타일보다 우선</p>\n<ul>\n<li>\n<p>브라우저 스타일 시트</p>\n</li>\n<li>\n<p>스타일이 충돌할 경우에 필요한 <strong>명시도</strong></p>\n</li>\n</ul>\n<p> 인라인 스타일 > id 스타일 > 클래스 스타일 > 태그 스타일</p>\n<p> 순서로 우선시 되어 적용</p>\n<ul>\n<li>소스에서 중복될 경우</li>\n</ul>\n<p> 같은 셀럭터에 다른 스타일이 중복 적용된 경우엔 나중에 나온 스타일이 적용</p>\n<p> 소스가 Cascading 되면서 위에서 선언된 내용을 덮어씀</p>\n</li>\n<li>\n<p>스타일 상속 - 부모 요소의 스타일을 자식 요소로, 위에서 아래로 적용</p>\n</li>\n</ol>\n<h2>CSS3</h2>\n<ul>\n<li>\n<p>아직 완벽하게 지원되는 브라우저가 없음</p>\n</li>\n<li>\n<p>표준화가 되지 않음. 표준화 단계는 확인이 가능. <a href=\"https://www.w3.org/Style/CSS/\">W3C 문서</a> 참고</p>\n</li>\n<li>\n<p>표준 규약이 아닌 속성들은 브라우저에 따라 지원 방식이 다름</p>\n<ul>\n<li>\n<p>prefix를 통해 각 브라우저별로 제어 가능</p>\n</li>\n<li>\n<table>\n<thead>\n<tr>\n<th>prefix</th>\n<th>desc</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-webkit-</td>\n<td>사파리, 크롬 등</td>\n</tr>\n<tr>\n<td>-moz-</td>\n<td>모질라, 파이어폭스 등</td>\n</tr>\n<tr>\n<td>-o-</td>\n<td>오페라</td>\n</tr>\n<tr>\n<td>-ms-</td>\n<td>익스플로러</td>\n</tr>\n</tbody>\n</table>\n<p>  -webkit-column-count:3; 사파리, 크롬에 적용</p>\n<p>  -moz-column-count:3; 파이어폭스</p>\n<p>  column-count:3 나중에 표준이 된 경우에 사용</p>\n</li>\n<li>\n<p><a href=\"https://leaverou.github.io/prefixfree\">-prefix-free</a> 를 이용하면 접두사를 붙이지 않아도 됨</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>텍스트 관련 스타일</h2>\n<ul>\n<li>\n<p>글꼴 관련</p>\n<ul>\n<li>\n<p>font-family - 글꼴 지정하기</p>\n</li>\n<li>\n<p>@font-face - 웹 폰트 사용하기</p>\n</li>\n<li>\n<p>CSS3가 웹 폰트를 표준으로 채택</p>\n</li>\n<li>\n<p>웹 문서를 작성할 때 그 안에 폰트 정보도 함께 저장. 사용자가 웹에 접근했을 경우 해당 폰트를 자동으로 다운로드 받게 하는 방식</p>\n</li>\n<li>\n<p><a href=\"https://fonts.google.com/earlyaccess\">구글 웹 폰트</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style&gt;\n@import url(http:// ........);\n&lt;/style&gt;</code></pre></div>\n<p>선언하고 font-family에 선언해서 사용하면 됨.</p>\n</li>\n<li>\n<p>font-size - 글자 크기 조절</p>\n</li>\n<li>\n<p>em, ex, px, pt.. 등의 사이즈가 존재. em은 해당 글꼴의 대문자 M을 기준으로 조절. 1em->16px;</p>\n</li>\n<li>\n<p>px는 폰트 크기가 고정되는 것이기 때문에 모바일에서 굉장히 작은 사이즈이 글꼴로 보임</p>\n</li>\n<li>\n<p>font-weight - 글자 굵기 조절</p>\n</li>\n<li>\n<p>font-style - 글자 스타일 지정</p>\n</li>\n<li>\n<p>normal, italic ..</p>\n</li>\n<li>\n<p>font를 한 번에 정의 하려면</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.h1 {\n  font : 여기에 다 정의 하면 됨\n}</code></pre></div>\n</li>\n<li>\n<p>텍스트 관련</p>\n<ul>\n<li>\n<p>color - 글자 색 지정</p>\n</li>\n<li>\n<p>text-decoration - 텍스트에 줄 표시하기 없애기</p>\n</li>\n<li>\n<p>none, underline, overline, line-through</p>\n</li>\n<li>\n<p>a 링크를 사용할 경우 자동으로 생기는 밑줄을 없앨 때는 text-decoration:none; 을 이용</p>\n</li>\n<li>\n<p>white-space - 공백 처리</p>\n</li>\n<li>\n<p>normal, nowrap, pre, pre-line, pre-wrap</p>\n</li>\n<li>\n<p>한 줄에 모든 내용을 영역의 너비 상관없이 표시하고 싶을 경우엔 white-space:nowrap;을 사용</p>\n</li>\n</ul>\n</li>\n<li>\n<p>문단 스타일</p>\n<ul>\n<li>\n<p>text-align - 텍스트 정렬하기</p>\n</li>\n<li>\n<p>start, end, left, right, center, justify, match-parent</p>\n</li>\n<li>\n<p>justify - 양쪽에 맞추어서 문단을 꽉차게 정렬, 양쪽에 맞춰서 정렬을 하다보니 글자, 단어 간의 공백이 어색할 수 있음</p>\n</li>\n<li>\n<p>text-justify - 정렬시 공백 조절</p>\n</li>\n<li>\n<p>text-align:justify;인 경우. 사용</p>\n</li>\n<li>\n<p>line-height - 줄 간격 조절</p>\n</li>\n<li>\n<p>줄 간격을 조절해서 문단 내의 줄을 더 넓게, 좁게 표현 가능</p>\n</li>\n<li>\n<p>text-overflow - 넘치는 텍스트에 대한 처리</p>\n</li>\n<li>\n<p>overflow:hidden; 이거나 overflow:scroll, overflow:auto; &#x26;&#x26; white-space:nowrap;인 경우. 텍스트가 영역을 넘어서는 내용에 대한 처리</p>\n</li>\n<li>\n<p>text-overflow:clip;넘치는 내용 제거, text-overflow:ellipsis; 말 줄임표 사용</p>\n</li>\n</ul>\n</li>\n<li>\n<p>목록 스타일</p>\n<ul>\n<li>\n<p>list-style-type - li 태그에 대한 불릿 스타일 지정</p>\n</li>\n<li>\n<p>nav 태그를 사용해서 메뉴를 만들 경우 에는 불릿이 필요 없음. list-style-type:none;</p>\n</li>\n<li>\n<p>list-style-image - li 태그 불릿에 이미지 넣기</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>색상과 배경을 위한 스타일</h2>\n<ul>\n<li>\n<p>background-color</p>\n</li>\n<li>\n<p>background-image</p>\n</li>\n<li>\n<p>background-repeat</p>\n</li>\n<li>\n<p>background-position</p>\n<ul>\n<li>\n<p>이미지의 위치를 지정</p>\n</li>\n<li>\n<p>background-origin으로 이미지의 위치가 시작될 배치기준을 정할 수 있다.</p>\n</li>\n<li>\n<p>background-origin으로 기준을 정하고 background-position으로 위치를 조정</p>\n</li>\n</ul>\n</li>\n<li>\n<p>background-attachment</p>\n<ul>\n<li>background-attachment:scroll;</li>\n</ul>\n<p>배경 이미지가 스크롤 됨</p>\n<ul>\n<li>background-attachment:fixed;</li>\n</ul>\n<p>배경 이미지는 고정되고 스크롤 됨</p>\n</li>\n<li>\n<p>background-size</p>\n</li>\n<li>\n<p>background - 위의 속성을 한꺼번에 지정</p>\n<ul>\n<li>font 속성도 전체를 지정하듯 background도 속성을 한번에 지정</li>\n</ul>\n</li>\n</ul>\n<h2>레이아웃을 위한 스타일</h2>\n<ul>\n<li>\n<p>블록 레벨 vs 인라인 레벨</p>\n<ul>\n<li>\n<p>블록 레벨</p>\n</li>\n<li>\n<p>요소가 혼자 한 줄을 차지하는 요소</p>\n</li>\n<li>\n<p>인라인 레벨</p>\n</li>\n<li>\n<p>줄을 차지 하지 않는 요소</p>\n</li>\n<li>\n<table>\n<thead>\n<tr>\n<th>종류</th>\n<th>태그</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>block level</td>\n<td><code class=\"language-text\">&lt;p&gt;, &lt;h1&gt;~&lt;h6&gt;, &lt;ul&gt;, &lt;ol&gt;, &lt;div&gt;, &lt;table&gt; ...</code></td>\n</tr>\n<tr>\n<td>inline level</td>\n<td><code class=\"language-text\">&lt;img&gt;, &lt;span&gt;, &lt;label&gt;, &lt;button&gt;</code></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n<li>\n<p>박스 모델</p>\n<ul>\n<li>블록 레벨 요소들은 모두 박스 형태!!</li>\n</ul>\n</li>\n<li>\n<p>display 속성</p>\n<ul>\n<li>\n<p>display:block;</p>\n</li>\n<li>\n<p>block 레벨로 사용하겠다는 내용. 즉, 한 줄을 다 사용하겠다는 것. 블록 레벨은 패딩, 마진 등의 값을 사용 가능</p>\n</li>\n<li>\n<p>display:inline;</p>\n</li>\n<li>\n<p>inline 요소로 사용하겠다는 것. 한 줄에 요소를 정렬할 때 필요</p>\n</li>\n<li>\n<p>ex) 세로로 배치되는 li를 수평으로 배치할 때 사용</p>\n</li>\n<li>\n<p>display:inline-block;</p>\n</li>\n<li>\n<p>vs display:inline;</p>\n<ul>\n<li>inline으로 지정하면 한 줄로 배치할 수 있지만 너비, 높이, 마진 등의 박스 모델 값을 정확히 적용할 수 없다</li>\n</ul>\n</li>\n<li>\n<p>inline-block을 사용한다는 것은 block의 특성과 inline의 특성을 모두 갖는다는 것을 의미</p>\n</li>\n<li>\n<p>옆으로 정렬하면서 높이, 너비, 마진 등을 조절할 수 있음</p>\n</li>\n</ul>\n</li>\n<li>\n<p>margin</p>\n<ul>\n<li>\n<p>요소 간의 간격 조절</p>\n</li>\n<li>\n<p>margin-left: auto; , margin-right:auto; 로 지정할 경우 좌우 공간의 마진을 똑같이 맞춰줌-> 가운데 정렬</p>\n</li>\n</ul>\n</li>\n<li>\n<p>padding</p>\n<ul>\n<li>테두리 안쪽 여백, 콘텐츠 영역과 테두리 사이의 여백</li>\n</ul>\n</li>\n</ul>\n<h2>CSS 포지셔닝</h2>\n<ul>\n<li>\n<p>box-sizing 속성을 사용하면 margin, padding 등을 전부 포함한 너비를 정할 수 있다.</p>\n<ul>\n<li>\n<p>box-sizing:content-box; 기본값. 즉, margin, padding 등을 따로 합친다.</p>\n</li>\n<li>\n<p>box-sizing:border-box; width가 margin, padding을 전부 포함해서 처리</p>\n</li>\n</ul>\n</li>\n<li>\n<p>float:left, float:right;</p>\n</li>\n<li>\n<p>float 속성은 다른 요소들에도 똑같이 속성이 전달되는데, 그 속성을 무효 시켜려면 clear:left|right|both를 사용하면 됨</p>\n</li>\n<li>\n<p>position 속성</p>\n<ul>\n<li>\n<p>position:relative; 이전 요소와 자연스럽게 연결해서 배치</p>\n</li>\n<li>\n<p>겹쳐서 배치시킬수 도 있음</p>\n</li>\n<li>\n<p>position:absolute; 원하는 위치에 배정</p>\n</li>\n<li>\n<p>absolute가 기준이 되는 위치는 부모, 조상요소 중 position 속성이 relative인 요소.</p>\n</li>\n<li>\n<p>absolute를 사용하려면 relative요소가 필수로 필요</p>\n</li>\n<li>\n<p>position:flexed;</p>\n</li>\n<li>\n<p>absolute와 다르게 브라우저 창이 기준.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>CSS3 선택자</h2>\n<ul>\n<li>\n<p>연결 선택자</p>\n<ul>\n<li>\n<p>하위 선택자(descendant selector)</p>\n</li>\n<li>\n<p>selection p { color: blue; }</p>\n</li>\n<li>\n<p>하위 요소 전부에 적용</p>\n</li>\n<li>\n<p>자식 선택자(child selector)</p>\n<ul>\n<li>\n<p>selection > p { color: blue; }</p>\n</li>\n<li>\n<p>바로 아래 요소에만 적용</p>\n</li>\n</ul>\n</li>\n<li>\n<p>인접 형제 선택자(adjacent selector)</p>\n<ul>\n<li>\n<p>h1 + p { color: blue; }</p>\n</li>\n<li>\n<p>가장 근처에 있는 해당 요소에도 적용</p>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style&gt;\nh1 + ul {\n  color: blue;\n  }\n  &lt;/style&gt;\n\n&lt;section&gt;\n  &lt;h1&gt;제목&lt;/h1&gt;\n  &lt;ul&gt;여기1&lt;/ul&gt;\n  &lt;ul&gt;여기2&lt;/ul&gt;\n&lt;/section&gt;</code></pre></div>\n<ul>\n<li>\n<p><strong>제목, 여기1</strong>에만 적용된다</p>\n</li>\n<li>\n<p>형제 선택자(sibling selector)</p>\n<ul>\n<li>\n<p>h1 ~ p { color: blue; }</p>\n</li>\n<li>\n<p>모든 형제 요소에 적용</p>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style&gt;\nh1 + ul {\n  color: blue;\n  }\n  &lt;/style&gt;\n\n&lt;section&gt;\n  &lt;h1&gt;제목&lt;/h1&gt;\n  &lt;ul&gt;여기1&lt;/ul&gt;\n  &lt;ul&gt;여기2&lt;/ul&gt;\n&lt;/section&gt;</code></pre></div>\n<ul>\n<li><strong>제목, 여기1, 여기2</strong>에 모두 적용</li>\n</ul>\n</li>\n<li>\n<p>속성 선택자</p>\n<ul>\n<li>\n<p>태그 안의 속성들의 값에 따라 스타일을 지정</p>\n</li>\n<li>\n<table>\n<thead>\n<tr>\n<th>기본형</th>\n<th>스타일 적용시</th>\n<th>예시 - 선택자</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[속성]</td>\n<td></td>\n<td>[href]</td>\n</tr>\n<tr>\n<td>[속성 = 값]</td>\n<td>'값'에 일치할 때</td>\n<td>[target=\"_blank\"]</td>\n</tr>\n<tr>\n<td>[속성 ~= 값]</td>\n<td>여러 값 중에 단어로 포함된 경우</td>\n<td>[class ~= \"button\"]</td>\n</tr>\n<tr>\n<td>[속성</td>\n<td>= 값]</td>\n<td>'값'이 포함되어 있을 때 (- 포함!!)</td>\n</tr>\n<tr>\n<td>[속성 ^= 값]</td>\n<td>'값'으로 시작할 때</td>\n<td>[title ^=\"eng\"]</td>\n</tr>\n<tr>\n<td>[속성 $= 값]</td>\n<td>'값'으로 끝날 때</td>\n<td>[title &#x26;=\"xls\"]</td>\n</tr>\n<tr>\n<td>[속성 *= 값]</td>\n<td>'값'이 포함된 어떤 단어든 가능</td>\n<td>[href *= \"w3\"]</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n<li>\n<p>가상 클래스와 가상 요소</p>\n<ul>\n<li>\n<p>가상클래스는 콜론(:), 가상 요소는 콜론 두 개(::)를 사용</p>\n</li>\n<li>\n<p>가상 클래스</p>\n</li>\n<li>\n<p>:link - 방문하지 않은 링크</p>\n</li>\n<li>\n<p>:visited - 방문한 링크</p>\n</li>\n<li>\n<p>:hover - 마우스 커서가 올라왔을 경우</p>\n</li>\n<li>\n<p>:active - 마우스로 누르고 있을 경우(활성화된 경우)</p>\n</li>\n<li>\n<p>:focus - 초점이 맞춰졌을 경우</p>\n</li>\n<li>\n<p>link, visited, hover, active 순서로 정의해야한다! 그렇지 않으면 정상 작동이 안됨</p>\n</li>\n<li>\n<p>:enabled, :disabled - 사용가능, 불가능</p>\n</li>\n<li>\n<p>:checked - 선택했을 경우</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>CSS3 애니메이션</h2>\n<ul>\n<li>\n<p>transform - 회전, 이동할 때 사용</p>\n<ul>\n<li>\n<p>2차원, 3차원 둘다 가능</p>\n</li>\n<li>\n<p>translate, translateX, translateY, scale, scaleX, scaleY ...</p>\n</li>\n<li>\n<p>translate3d, transalteZ, scale3d, scaleZ ...</p>\n</li>\n<li>\n<p>ex) .tag:hover { transform:translate(tx, ty); }</p>\n</li>\n</ul>\n</li>\n<li>\n<p>transition - 변환 효과 줄 때</p>\n<ul>\n<li>transition은 완전히 다른 스타일로 변화를 줄 때 사용!</li>\n</ul>\n</li>\n<li>\n<p>animation - 애니메이션 효과 만들기</p>\n<ul>\n<li>\n<p>transition과 비슷하지만 keyframe이라는 중간지점이 있다는 것이 다른 점</p>\n</li>\n<li>\n<p>즉, 시작하고 끝날 때 까지 원하는 지점에서 전부 애니메이션을 통해 변화를 줄 수 있음</p>\n</li>\n</ul>\n</li>\n<li>\n<p>@keyframes - 애니메이션 효과에서 중간 지점 만들기</p>\n<ul>\n<li>\n<p>from to는 시작 위치와 끝 위치를 0%, 100%로 지정한다는 이야기</p>\n</li>\n<li>\n<p>원하는 위치? 구간?에 대한 표시를 하고 사용하면 됨</p>\n</li>\n<li>\n<p>ex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">50% {\nbackground-color: blue;\nborder: 1px solid black;\n}</code></pre></div>\n</li>\n<li>\n<p>animation-name - 사용하려는 keyframes를 명시 하는 곳</p>\n</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">div {\nwidth: 100px;\nheight: 100px;\nbackground-color: blue;\nanimation-name: change-bg;\nanimation-duration: 3s;\n}\n@keyframes change-bg {\nfrom {\n  background-color: blue;\n  border: 1px solid black;\n}\nto {\n  background-color: #a5d6ff;\n  border:1px solid blue;\n  border-radius: 50%;\n}\n}</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2>반응형 웹 만들기</h2>\n<ul>\n<li>\n<p>뷰포트(viewport)</p>\n<ul>\n<li>\n<p>스마트폰 화면에서 실제 내용이 표시되는 영역</p>\n</li>\n<li>\n<p>뷰포트를 지정하면 접속한 기기 화면에 맞추어 확대 혹은 축소해서 표시 가능</p>\n</li>\n</ul>\n</li>\n<li>\n<p>가변 글꼴</p>\n<ul>\n<li>em vs rem</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>em</th>\n<th>rem</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>부모 요소에서 지정한 폰트의 대문자 M의 너비를 1em(16px)으로 지정</td>\n<td>root에서 지정한 글꼴 사이즈를 바탕으로 계산</td>\n</tr>\n<tr>\n<td>부모 글꼴에 따라 글자크기의 영향을 크게 받는다</td>\n<td>중간에 기본값이 변하지 않는다</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>img 태그에 srcset 속성</p>\n<ul>\n<li>\n<p>화면 너비 값이나 픽셀에 따라 이미지를 지정가능</p>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;img src=&quot;&quot; srcset=&quot;&quot;&gt;</code></p>\n</li>\n<li>\n<p>picture 태그, source 태그(html5.1)</p>\n</li>\n<li>\n<p>media 쿼리를 통해 해상도별 이미지 지정 가능</p>\n</li>\n</ul>\n</li>\n<li>\n<p>미디어 쿼리</p>\n<ul>\n<li>\n<p>접속하는 장치에 따라 특정 css를 사용</p>\n</li>\n<li>\n<p>중단점 사용이 가능 - 중단점을 통해 기기별 혹은 사이즈별로 css를 사용 가능</p>\n</li>\n</ul>\n</li>\n<li>\n<p>플렉서블 박스 레이아웃</p>\n<ul>\n<li>\n<p>요소를 플렉서블하게 사용하려면? - 플렉스 컨테이너로 묶어야 함 ex) display:flex;</p>\n</li>\n<li>\n<p>브라우저마다 지원하는 방식이 다르기에 브라우저 접두사가 필요</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">display:-webkit-box; /* iOS6이하, 사파리 3.1 */\ndisplay:-moz-box; /* 파폭 19이하 */\ndisplay:-ms-flexbox; /* IE 10 */\ndisplay:-webkit-flex; /* 웹킷 구버전 */\ndisplay:flex /* 표준 */</code></pre></div>\n<ul>\n<li>\n<p>flex-direction : 방향 지정</p>\n</li>\n<li>\n<p>row or column</p>\n</li>\n<li>\n<p>flex-wrap - 한 줄 또는 여러 줄 배치</p>\n</li>\n<li>\n<p>no-wrap - 한 줄에 표시(기본 값)</p>\n</li>\n<li>\n<p>wrap - 여러 줄에 표시</p>\n</li>\n<li>\n<p>flex-flow - 플렉스 방향과 여러 줄의 배치를 한 번에 지정</p>\n</li>\n<li>\n<p>flex-flow:colum wrap; - 위에서 아래로, 여러 줄에 표시</p>\n</li>\n<li>\n<p>flex - 플렉스 항목의 크기 조절</p>\n</li>\n<li>\n<p>flex:1 1 0; - 늘이거나 줄이지 않음</p>\n</li>\n<li>\n<p>flex:2 2 0; - 2배 늘리거나 2배 줄임</p>\n</li>\n<li>\n<p>justify-content - 주축(가로)의 배치 방법 지정</p>\n</li>\n<li>\n<p>flext-end - 주축의 끝점을 기준으로 배치(우측 정렬?)</p>\n</li>\n<li>\n<p>space-around - 항목을 같은 간격으로 배치 (전체에서 중간중간에 동일 간격으로 margin?? 발생)</p>\n</li>\n<li>\n<p>align-items - 교차축(세로) 기준 배치방법</p>\n</li>\n<li>\n<p>center</p>\n</li>\n<li>\n<p>flex-end - 교차축의 끝점으로 배치(footer의 경우 최하단에 배치)</p>\n</li>\n<li>\n<p>align-content - 여러 줄일 때 배치 방법 지정</p>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"CSS 개념 공부","date":"October 27, 2018"}}},"pageContext":{"slug":"/blog/2018-10-27-css-study/","previous":null,"next":{"fields":{"slug":"/blog/2018-10-27-html-study/"},"frontmatter":{"title":"HTML 기본 개념부터 다시","tags":["html","markup"]}}}}